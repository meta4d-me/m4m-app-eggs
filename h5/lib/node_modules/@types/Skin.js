var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
System.register("ui/Skin/Skin", ["PSDUI/newUiBase"], function (exports_1, context_1) {
    "use strict";
    var newUiBase_1, Skin, bg_img, midbg, btnbg, bluebtn_btn, text1_lab, greybtn_btn, text2_lab, text3_lab, btnlock_img, listscr_scr, listscrcontent, ball_raw, frame1_img, lockbg_img, namebg_img, name_lab, lock_img, topbg_img, toptext_lab, back_btn;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (newUiBase_1_1) {
                newUiBase_1 = newUiBase_1_1;
            }
        ],
        execute: function () {
            Skin = /** @class */ (function (_super) {
                __extends(Skin, _super);
                function Skin() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.uiName = "Skin";
                    /***/
                    _this.bg_img = new bg_img();
                    _this.midbg = new midbg();
                    /***/
                    _this.topbg_img = new topbg_img();
                    return _this;
                }
                Skin.prototype.onInit = function () {
                    if (this.onInite) {
                        this.onInite();
                    }
                    //添加按钮事件
                    this.midbg.btnbg.bluebtn_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.bluebtn_btn_event, this);
                    this.midbg.btnbg.greybtn_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.greybtn_btn_event, this);
                    this.topbg_img.back_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.back_btn_event, this);
                };
                //按钮事件
                Skin.prototype.bluebtn_btn_event = function () { if (this.bluebtn_btn_btnEvent)
                    this.bluebtn_btn_btnEvent(); };
                ;
                Skin.prototype.greybtn_btn_event = function () { if (this.greybtn_btn_btnEvent)
                    this.greybtn_btn_btnEvent(); };
                ;
                Skin.prototype.back_btn_event = function () { if (this.back_btn_btnEvent)
                    this.back_btn_btnEvent(); };
                ;
                //文字修改方法
                /**修改label 修改label文字方法*/
                Skin.prototype.text1_lab_text = function (text) { this.midbg.btnbg.bluebtn_btn.text1_lab.label.text = text; };
                /**修改label Level10修改label文字方法*/
                Skin.prototype.text2_lab_text = function (text) { this.midbg.btnbg.greybtn_btn.text2_lab.label.text = text; };
                /**修改label Minted修改label文字方法*/
                Skin.prototype.text3_lab_text = function (text) { this.midbg.btnbg.greybtn_btn.text3_lab.label.text = text; };
                /**修改label 修改label文字方法*/
                Skin.prototype.name_lab_text = function (text) { this.midbg.listscr_scr.listscrcontent.ball_raw.namebg_img.name_lab.label.text = text; };
                /**修改label 修改label文字方法*/
                Skin.prototype.toptext_lab_text = function (text) { this.topbg_img.toptext_lab.label.text = text; };
                return Skin;
            }(newUiBase_1.newUiBase));
            exports_1("Skin", Skin);
            bg_img = /** @class */ (function () {
                function bg_img() {
                }
                return bg_img;
            }());
            exports_1("bg_img", bg_img);
            midbg = /** @class */ (function () {
                function midbg() {
                    this.btnbg = new btnbg();
                    /***/
                    this.listscr_scr = new listscr_scr();
                }
                return midbg;
            }());
            exports_1("midbg", midbg);
            btnbg = /** @class */ (function () {
                function btnbg() {
                    this.bluebtn_btn = new bluebtn_btn();
                    this.greybtn_btn = new greybtn_btn();
                }
                return btnbg;
            }());
            exports_1("btnbg", btnbg);
            bluebtn_btn = /** @class */ (function () {
                function bluebtn_btn() {
                    /***/
                    this.text1_lab = new text1_lab();
                }
                return bluebtn_btn;
            }());
            exports_1("bluebtn_btn", bluebtn_btn);
            text1_lab = /** @class */ (function () {
                function text1_lab() {
                }
                return text1_lab;
            }());
            exports_1("text1_lab", text1_lab);
            greybtn_btn = /** @class */ (function () {
                function greybtn_btn() {
                    /**Level10*/
                    this.text2_lab = new text2_lab();
                    /**Minted*/
                    this.text3_lab = new text3_lab();
                    this.btnlock_img = new btnlock_img();
                }
                return greybtn_btn;
            }());
            exports_1("greybtn_btn", greybtn_btn);
            text2_lab = /** @class */ (function () {
                function text2_lab() {
                }
                return text2_lab;
            }());
            exports_1("text2_lab", text2_lab);
            text3_lab = /** @class */ (function () {
                function text3_lab() {
                }
                return text3_lab;
            }());
            exports_1("text3_lab", text3_lab);
            btnlock_img = /** @class */ (function () {
                function btnlock_img() {
                }
                return btnlock_img;
            }());
            exports_1("btnlock_img", btnlock_img);
            listscr_scr = /** @class */ (function () {
                function listscr_scr() {
                    this.listscrcontent = new listscrcontent();
                }
                return listscr_scr;
            }());
            exports_1("listscr_scr", listscr_scr);
            listscrcontent = /** @class */ (function () {
                function listscrcontent() {
                    this.ball_raw = new ball_raw();
                }
                return listscrcontent;
            }());
            exports_1("listscrcontent", listscrcontent);
            ball_raw = /** @class */ (function () {
                function ball_raw() {
                    this.frame1_img = new frame1_img();
                    this.lockbg_img = new lockbg_img();
                    this.namebg_img = new namebg_img();
                    this.lock_img = new lock_img();
                }
                return ball_raw;
            }());
            exports_1("ball_raw", ball_raw);
            frame1_img = /** @class */ (function () {
                function frame1_img() {
                }
                return frame1_img;
            }());
            exports_1("frame1_img", frame1_img);
            lockbg_img = /** @class */ (function () {
                function lockbg_img() {
                }
                return lockbg_img;
            }());
            exports_1("lockbg_img", lockbg_img);
            namebg_img = /** @class */ (function () {
                function namebg_img() {
                    /***/
                    this.name_lab = new name_lab();
                }
                return namebg_img;
            }());
            exports_1("namebg_img", namebg_img);
            name_lab = /** @class */ (function () {
                function name_lab() {
                }
                return name_lab;
            }());
            exports_1("name_lab", name_lab);
            lock_img = /** @class */ (function () {
                function lock_img() {
                }
                return lock_img;
            }());
            exports_1("lock_img", lock_img);
            topbg_img = /** @class */ (function () {
                function topbg_img() {
                    /***/
                    this.toptext_lab = new toptext_lab();
                    this.back_btn = new back_btn();
                }
                return topbg_img;
            }());
            exports_1("topbg_img", topbg_img);
            toptext_lab = /** @class */ (function () {
                function toptext_lab() {
                }
                return toptext_lab;
            }());
            exports_1("toptext_lab", toptext_lab);
            back_btn = /** @class */ (function () {
                function back_btn() {
                }
                return back_btn;
            }());
            exports_1("back_btn", back_btn);
        }
    };
});
System.register("game/Common/CommonCell", ["Data/Cell"], function (exports_2, context_2) {
    "use strict";
    var Cell_1, CommonCell;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (Cell_1_1) {
                Cell_1 = Cell_1_1;
            }
        ],
        execute: function () {
            CommonCell = /** @class */ (function (_super) {
                __extends(CommonCell, _super);
                function CommonCell() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                CommonCell.prototype.pointerDownFun = function () {
                    // console.error(this.cellData.data);
                    if (this.cellData.showTip) { //如果需要显示
                        var worldPos = this.transform.getWorldTranslate();
                        // TipsToolManager.Instance.pos = worldPos;
                        // TipsToolManager.Instance.cellWidth = this.cellData.width;
                        // TipsToolManager.Instance.cellHeight = this.cellData.height;
                        // // console.error("如果需要显示Tips");
                        // TipsToolManager.Instance.ShowItemTips(this.cellData.data);
                    }
                };
                CommonCell = __decorate([
                    m4m.reflect.node2DComponent
                ], CommonCell);
                return CommonCell;
            }(Cell_1.Cell));
            exports_2("CommonCell", CommonCell);
        }
    };
});
System.register("ui/Skin/SkinView", ["audio/AudioMgr", "AutoCode/Net/ClientRequest/GameArchiveManagerRequest", "AutoCode/Net/WsDataManager", "Core/blockchain/ConnectWalletManager", "Data/BindKeyName", "Data/CellData", "Data/Grid", "Data/GridData", "Data/ListModel", "GameMgr", "Manager/GameArchiveManager", "Net/SDKWebsokectTool", "PSDUI/UiDataManager", "PSDUI/UiManager", "role/playerMgr", "skinMgr", "ui/pages/homePage", "ui/pages/inGamePage", "ui/Skin/Skin", "ui/Skin/SkinCell"], function (exports_3, context_3) {
    "use strict";
    var AudioMgr_1, GameArchiveManagerRequest_1, WsDataManager_1, ConnectWalletManager_1, BindKeyName_1, CellData_1, Grid_1, GridData_1, ListModel_1, GameMgr_1, GameArchiveManager_1, SDKWebsokectTool_1, UiDataManager_1, UiManager_1, playerMgr_1, skinMgr_1, homePage_1, inGamePage_1, Skin_1, SkinCell_1, SkinView;
    var __moduleName = context_3 && context_3.id;
    return {
        setters: [
            function (AudioMgr_1_1) {
                AudioMgr_1 = AudioMgr_1_1;
            },
            function (GameArchiveManagerRequest_1_1) {
                GameArchiveManagerRequest_1 = GameArchiveManagerRequest_1_1;
            },
            function (WsDataManager_1_1) {
                WsDataManager_1 = WsDataManager_1_1;
            },
            function (ConnectWalletManager_1_1) {
                ConnectWalletManager_1 = ConnectWalletManager_1_1;
            },
            function (BindKeyName_1_1) {
                BindKeyName_1 = BindKeyName_1_1;
            },
            function (CellData_1_1) {
                CellData_1 = CellData_1_1;
            },
            function (Grid_1_1) {
                Grid_1 = Grid_1_1;
            },
            function (GridData_1_1) {
                GridData_1 = GridData_1_1;
            },
            function (ListModel_1_1) {
                ListModel_1 = ListModel_1_1;
            },
            function (GameMgr_1_1) {
                GameMgr_1 = GameMgr_1_1;
            },
            function (GameArchiveManager_1_1) {
                GameArchiveManager_1 = GameArchiveManager_1_1;
            },
            function (SDKWebsokectTool_1_1) {
                SDKWebsokectTool_1 = SDKWebsokectTool_1_1;
            },
            function (UiDataManager_1_1) {
                UiDataManager_1 = UiDataManager_1_1;
            },
            function (UiManager_1_1) {
                UiManager_1 = UiManager_1_1;
            },
            function (playerMgr_1_1) {
                playerMgr_1 = playerMgr_1_1;
            },
            function (skinMgr_1_1) {
                skinMgr_1 = skinMgr_1_1;
            },
            function (homePage_1_1) {
                homePage_1 = homePage_1_1;
            },
            function (inGamePage_1_1) {
                inGamePage_1 = inGamePage_1_1;
            },
            function (Skin_1_1) {
                Skin_1 = Skin_1_1;
            },
            function (SkinCell_1_1) {
                SkinCell_1 = SkinCell_1_1;
            }
        ],
        execute: function () {
            SkinView = /** @class */ (function (_super) {
                __extends(SkinView, _super);
                function SkinView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.seqtListModel = new ListModel_1.ListModel();
                    return _this;
                }
                SkinView.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    this.onShow = this.onShowFun.bind(this);
                    this.onHide = this.onHideFun.bind(this);
                    this.onDispose = this.onDisposeFun.bind(this);
                    this.toptext_lab_text("Choose Skin");
                    this.back_btn_btnEvent = this.backBtnFun.bind(this);
                    this.text2_lab_text("Level ".concat(GameArchiveManager_1.GameArchiveManager.Instance.isLevel));
                    this.text3_lab_text("Minted");
                    this.text1_lab_text("Mint");
                    this.oninfogamingGrid();
                    this.greybtn_btn_btnEvent = this.greybtnFun.bind(this);
                    this.bluebtn_btn_btnEvent = this.bluebtnFun.bind(this);
                    this.skinFun = this.skindata.bind(this);
                    UiDataManager_1.UiDataManager.bindFunctionData(BindKeyName_1.BindKeyName.skinImage, this.skinFun);
                    this.skinBtnFun = this.btnVisible.bind(this);
                    UiDataManager_1.UiDataManager.bindFunctionData(BindKeyName_1.BindKeyName.skinBtnVisible, this.skinBtnFun);
                };
                SkinView.prototype.onShowFun = function () {
                    var GameArchive = this.btnVisible();
                    this.GameArchiveSkinData(skinMgr_1.skinMgr.skins);
                    this.mygrid.SelectIndex = Number(GameArchive.baseData.id) - 1;
                };
                SkinView.prototype.btnVisible = function () {
                    var GameArchive = GameArchiveManager_1.GameArchiveManager.Instance.GameArchiveData;
                    this.currentSkin = GameArchive.baseData;
                    if (GameArchive) {
                        var isLevel = GameArchiveManager_1.GameArchiveManager.Instance.isLevel;
                        var isbool = Number(GameArchive.Currentlevel.id) <= isLevel;
                        this.midbg.btnbg.greybtn_btn.btnlock_img.transform.visible = isbool;
                        if (!isbool) {
                            this.midbg.btnbg.greybtn_btn.transform.visible = GameArchive.ism4mnft;
                            this.midbg.btnbg.greybtn_btn.text2_lab.transform.visible = false;
                            this.midbg.btnbg.greybtn_btn.text3_lab.transform.visible = GameArchive.ism4mnft;
                        }
                        else {
                            this.midbg.btnbg.greybtn_btn.transform.visible = isbool;
                            this.midbg.btnbg.greybtn_btn.text2_lab.transform.visible = isbool;
                            this.midbg.btnbg.greybtn_btn.text3_lab.transform.visible = false;
                        }
                        this.midbg.btnbg.bluebtn_btn.transform.visible = (!GameArchive.ism4mnft && !isbool);
                    }
                    return GameArchive;
                };
                SkinView.prototype.onHideFun = function () {
                };
                SkinView.prototype.onDisposeFun = function () {
                    this.mygrid.dispose();
                    UiDataManager_1.UiDataManager.unBindFunctionData(BindKeyName_1.BindKeyName.skinImage, this.skinFun);
                    UiDataManager_1.UiDataManager.unBindFunctionData(BindKeyName_1.BindKeyName.skinBtnVisible, this.skinBtnFun);
                };
                SkinView.prototype.backBtnFun = function () {
                    AudioMgr_1.AudioMgr.Play("touch.mp3");
                    UiManager_1.UiManager.hideUi("Skin");
                    UiManager_1.UiManager.showUi("Main");
                    inGamePage_1.inGamePage.Instance().then(function (ins) {
                        ins.setShowItem(inGamePage_1.showItem.home);
                    });
                    homePage_1.homePage.Instance().then(function (ins) {
                        ins.show();
                    });
                };
                //初始化所有存档
                SkinView.prototype.oninfogamingGrid = function () {
                    var _this = this;
                    var lo = m4m.framework.layoutOption;
                    var cellTrans = this.midbg.listscr_scr.listscrcontent.ball_raw.transform;
                    var cellPercentWidth = cellTrans.width;
                    var cellPercentHeight = cellTrans.height;
                    var cellData = new CellData_1.CellData();
                    cellData.width = cellPercentWidth;
                    cellData.height = cellPercentHeight;
                    var gridData = new GridData_1.GridData();
                    gridData.columns = 3;
                    gridData.rows = 50;
                    gridData.offsetX = 90;
                    gridData.offsetY = 70;
                    var initX = cellTrans.getLayoutValue(lo.H_CENTER);
                    gridData.initXPlace = initX;
                    var initY = cellTrans.getLayoutValue(lo.TOP);
                    gridData.initYPlace = initY;
                    gridData.cellName = SkinCell_1.SkinCell.name;
                    gridData.cellData = cellData;
                    gridData.cell = this.midbg.listscr_scr.listscrcontent.ball_raw;
                    //生成的格子放在父节点
                    gridData.parentTrans = cellTrans.parent;
                    gridData.cellLayoutX = lo.H_CENTER;
                    gridData.cellLayoutY = lo.TOP;
                    this.mygrid = new Grid_1.Grid(gridData);
                    cellTrans.visible = false;
                    this.mygrid.selectCallBackFun = this.selectCallBackFun.bind(this);
                    this.ScExtl = this.midbg.listscr_scr.scrollRect.transform.addComponent("ScrollRectExtend");
                    this.ScExtl.offsetUpY = 30;
                    this.ScExtl.offsetDownY = 30;
                    this.ScExtl.setList(this.mygrid.getCellList());
                    setTimeout(function () {
                        _this.ScExtl.upDateTrans();
                    }, 0);
                };
                SkinView.prototype.selectCallBack = function () {
                    var game = GameArchiveManager_1.GameArchiveManager.Instance.GameArchiveData;
                    var data = this.mygrid.getCellList();
                    data.forEach(function (cell) {
                        if (cell.cellData.data) {
                            var bool = cell.cellData.data.id == game.baseData.id;
                            cell.nowClass.frame1_img.transform.visible = bool;
                        }
                    });
                };
                SkinView.prototype.selectCallBackFun = function (data, index) {
                    // console.log(data, index);
                    this.currentSkin = data;
                    var game = GameArchiveManager_1.GameArchiveManager.Instance.GameArchiveData;
                    if (game) {
                        var isskin = Number(game.Currentlevel.id) <= data.deblocking[0];
                        if (!isskin && !game.ism4mnft) {
                            // GameMgr.currUseSkin = data.id;
                            if (game.baseData.id != data.id) {
                                playerMgr_1.playerMgr.changeSkin(data.id);
                                GameArchiveManagerRequest_1.GameArchiveManagerRequest.Instance.SwitchSkin(game.id, data.id);
                            }
                        }
                        else {
                            // TipsManager.ShowTips("The ball has been registered as an NFT, and the skin cannot be switched");
                        }
                    }
                };
                SkinView.prototype.GameArchiveSkinData = function (data) {
                    this.seqtListModel.setSource(data);
                    this.mygrid.setListModel(this.seqtListModel);
                    this.midbg.listscr_scr.listscrcontent.transform.height = this.mygrid.getHeight() + 70;
                };
                // public 
                SkinView.prototype.greybtnFun = function () {
                    AudioMgr_1.AudioMgr.Play("touch.mp3");
                    console.log("222");
                    // this.updateSkindata({ url: "QmTU7z9Yzx1F6B8fP47gvmo4ic3k6VGZgfSUzp5nmHdjJM", imageurl: "https://show-svc.meta4d.me:4439/ImageSend?img=M4MNFT45wb2uFTMbUX.png" });
                };
                SkinView.prototype.bluebtnFun = function () {
                    AudioMgr_1.AudioMgr.Play("touch.mp3");
                    UiManager_1.UiManager.showUi("wloading");
                    GameArchiveManagerRequest_1.GameArchiveManagerRequest.Instance.selectData(this.currentSkin.headPortrait);
                };
                SkinView.prototype.skindata = function (data) {
                    var keybool = {};
                    keybool["ipfsUrl"] = data.url;
                    var skin = GameArchiveManager_1.GameArchiveManager.Instance.GameArchiveData;
                    var tokenid = WsDataManager_1.WsDataManager.UserDataBaseData.token;
                    var address = ConnectWalletManager_1.ConnectWalletManager.Instance.address;
                    var skintexTures = "";
                    var skindata = skinMgr_1.skinMgr.skins_map.get(skin.baseData.id);
                    if (skindata.skinSticker) {
                        skintexTures = window.location.origin + "/" + GameMgr_1.GameMgr.skinTexPath + skindata.skinSticker;
                    }
                    /**
                     * prev参数根据”_“分隔，
                     * 1155NFT，第一个参数是模型地址一般是在cdn上，第二个参数是本地图片地址，第三个参数是保存在ipfs上的模型
                     * 721NFT, 第一个参数是上传的ipfs上的json，每个部件对应的模型名称，第二个参数是本地图片地址，第三个参数是本地模型地址
                     */
                    var prev = window.location.origin + "/" + GameMgr_1.GameMgr.propsPath + "qiu" + "#" + skintexTures + "_" + data.imageurl;
                    var Params = {
                        Id: skin.id,
                        desc: "",
                        itemName: skin.baseData.skinName,
                        symbol: "H",
                        rolePartName: "Sphere",
                        tokenid: tokenid,
                        address: address,
                        pictureRes: "",
                        imageBase64: "",
                        keybool: keybool,
                        prev: prev,
                    };
                    SDKWebsokectTool_1.SDKWebsokectTool.Instance.SDKManager_testprepareComponent(Params);
                    UiManager_1.UiManager.hideUi("wloading");
                };
                SkinView.prototype.updateSkindata = function (data) {
                    var keybool = {};
                    keybool["ipfsUrl"] = data.url;
                    var skin = GameArchiveManager_1.GameArchiveManager.Instance.GameArchiveData;
                    var tokenid = WsDataManager_1.WsDataManager.UserDataBaseData.token;
                    var address = ConnectWalletManager_1.ConnectWalletManager.Instance.address;
                    var skintexTures = "";
                    var skindata = skinMgr_1.skinMgr.skins_map.get(skin.baseData.id);
                    if (skindata.skinSticker) {
                        skintexTures = window.location.origin + "/" + GameMgr_1.GameMgr.skinTexPath + skindata.skinSticker;
                    }
                    var prev = window.location.origin + "/" + GameMgr_1.GameMgr.propsPath + "qiu" + "#" + skintexTures + "_" + data.imageurl;
                    var Params = {
                        Id: skin.id,
                        desc: "",
                        itemName: skin.baseData.skinName,
                        symbol: "H",
                        rolePartName: "Sphere",
                        tokenid: tokenid,
                        address: address,
                        pictureRes: "",
                        imageBase64: "",
                        keybool: keybool,
                        prev: prev,
                    };
                    SDKWebsokectTool_1.SDKWebsokectTool.Instance.SDKManager_RenewComponentData(Params);
                };
                return SkinView;
            }(Skin_1.Skin));
            exports_3("SkinView", SkinView);
        }
    };
});
System.register("ui/Skin/SkinCell", ["game/Common/CommonCell", "skinMgr", "Tools/commTool", "Manager/GameArchiveManager", "ui/Skin/SkinView"], function (exports_4, context_4) {
    "use strict";
    var CommonCell_1, skinMgr_2, commTool_1, GameArchiveManager_2, SkinView_1, SkinCell;
    var __moduleName = context_4 && context_4.id;
    return {
        setters: [
            function (CommonCell_1_1) {
                CommonCell_1 = CommonCell_1_1;
            },
            function (skinMgr_2_1) {
                skinMgr_2 = skinMgr_2_1;
            },
            function (commTool_1_1) {
                commTool_1 = commTool_1_1;
            },
            function (GameArchiveManager_2_1) {
                GameArchiveManager_2 = GameArchiveManager_2_1;
            },
            function (SkinView_1_1) {
                SkinView_1 = SkinView_1_1;
            }
        ],
        execute: function () {
            SkinCell = /** @class */ (function (_super) {
                __extends(SkinCell, _super);
                function SkinCell() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                SkinCell.prototype.setCellClass = function (value) {
                    this.nowClass = value;
                    // commTool.makeUIEventDiscard(this.nowClass.lockbg_img.transform);
                };
                //选中当前cell 时的fun
                SkinCell.prototype.selectFun = function (selectbool) {
                    _super.prototype.selectFun.call(this, selectbool);
                    var game = GameArchiveManager_2.GameArchiveManager.Instance.GameArchiveData;
                    if (game && this.cellData.data) {
                        if (!game.ism4mnft) {
                            if (this.cellData.data.id != 1) {
                                var isskin = Number(game.Currentlevel.id) <= this.cellData.data.deblocking[0];
                                if (isskin) {
                                    this.nowClass.frame1_img.transform.visible = false;
                                    SkinView_1.SkinView.Instance.selectCallBack();
                                }
                                else {
                                    this.nowClass.frame1_img.transform.visible = selectbool;
                                }
                            }
                            else {
                                this.nowClass.frame1_img.transform.visible = selectbool;
                            }
                        }
                        else {
                            var bool = this.cellData.data.id == game.baseData.id;
                            this.nowClass.frame1_img.transform.visible = bool;
                        }
                    }
                };
                SkinCell.prototype.setData = function (value) {
                    var _this = this;
                    this.cellData.data = value;
                    if (value) {
                        var imageUrl = skinMgr_2.skinMgr.iconPath + value.headPortrait;
                        commTool_1.commTool.loaderTextureFun(imageUrl, function (_tex) {
                            _this.nowClass.rawImage2D.image = _tex;
                            _this.nowClass.transform.markDirty();
                        });
                        if (GameArchiveManager_2.GameArchiveManager.Instance.GameArchiveData) {
                            if (value.id != 1) {
                                var isskin = Number(GameArchiveManager_2.GameArchiveManager.Instance.GameArchiveData.Currentlevel.id) <= value.deblocking[0];
                                this.nowClass.namebg_img.transform.visible = isskin;
                                this.nowClass.lock_img.transform.visible = isskin;
                                this.nowClass.lockbg_img.transform.visible = isskin;
                            }
                            else {
                                this.nowClass.namebg_img.transform.visible = false;
                                this.nowClass.lock_img.transform.visible = false;
                                this.nowClass.lockbg_img.transform.visible = false;
                            }
                        }
                        this.nowClass.namebg_img.name_lab.label.text = "Level " + value.deblocking[0];
                        this.nowClass.transform.visible = true;
                        this.nowClass.frame1_img.transform.visible = false;
                    }
                    else {
                        this.nowClass.transform.visible = false;
                    }
                };
                SkinCell = __decorate([
                    m4m.reflect.node2DComponent
                ], SkinCell);
                return SkinCell;
            }(CommonCell_1.CommonCell));
            exports_4("SkinCell", SkinCell);
        }
    };
});
//# sourceMappingURL=Skin.js.map