var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
System.register("Main", ["PSDUI/newUiBase"], function (exports_1, context_1) {
    "use strict";
    var newUiBase_1, Main, bg, back_btn, set_btn, rtbg, spin_btn, shop1_btn;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (newUiBase_1_1) {
                newUiBase_1 = newUiBase_1_1;
            }
        ],
        execute: function () {
            Main = /** @class */ (function (_super) {
                __extends(Main, _super);
                function Main() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    //文字修改方法
                    _this.uiName = "Main";
                    _this.bg = new bg();
                    _this.back_btn = new back_btn();
                    _this.rtbg = new rtbg();
                    return _this;
                }
                Main.prototype.onInit = function () {
                    if (this.onInite) {
                        this.onInite();
                    }
                    //添加按钮事件
                    this.back_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.back_btn_event, this);
                    this.back_btn.set_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.set_btn_event, this);
                    this.rtbg.spin_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.spin_btn_event, this);
                    this.rtbg.shop1_btn.button.addListener(m4m.event.UIEventEnum.PointerClick, this.shop1_btn_event, this);
                };
                //按钮事件
                Main.prototype.back_btn_event = function () { if (this.back_btn_btnEvent)
                    this.back_btn_btnEvent(); };
                ;
                Main.prototype.set_btn_event = function () { if (this.set_btn_btnEvent)
                    this.set_btn_btnEvent(); };
                ;
                Main.prototype.spin_btn_event = function () { if (this.spin_btn_btnEvent)
                    this.spin_btn_btnEvent(); };
                ;
                Main.prototype.shop1_btn_event = function () { if (this.shop1_btn_btnEvent)
                    this.shop1_btn_btnEvent(); };
                ;
                return Main;
            }(newUiBase_1.newUiBase));
            exports_1("Main", Main);
            bg = /** @class */ (function () {
                function bg() {
                }
                return bg;
            }());
            exports_1("bg", bg);
            back_btn = /** @class */ (function () {
                function back_btn() {
                    this.set_btn = new set_btn();
                }
                return back_btn;
            }());
            exports_1("back_btn", back_btn);
            set_btn = /** @class */ (function () {
                function set_btn() {
                }
                return set_btn;
            }());
            exports_1("set_btn", set_btn);
            rtbg = /** @class */ (function () {
                function rtbg() {
                    this.spin_btn = new spin_btn();
                    this.shop1_btn = new shop1_btn();
                }
                return rtbg;
            }());
            exports_1("rtbg", rtbg);
            spin_btn = /** @class */ (function () {
                function spin_btn() {
                }
                return spin_btn;
            }());
            exports_1("spin_btn", spin_btn);
            shop1_btn = /** @class */ (function () {
                function shop1_btn() {
                }
                return shop1_btn;
            }());
            exports_1("shop1_btn", shop1_btn);
        }
    };
});
System.register("MainView", ["audio/AudioMgr", "PSDUI/UiManager", "Tool/joinTool", "Tool/tdTool", "ui/pages/homePage", "ui/pages/inGamePage", "ui/pages/setingPage", "Main"], function (exports_2, context_2) {
    "use strict";
    var AudioMgr_1, UiManager_1, joinTool_1, tdTool_1, homePage_1, inGamePage_1, setingPage_1, Main_1, MainView;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (AudioMgr_1_1) {
                AudioMgr_1 = AudioMgr_1_1;
            },
            function (UiManager_1_1) {
                UiManager_1 = UiManager_1_1;
            },
            function (joinTool_1_1) {
                joinTool_1 = joinTool_1_1;
            },
            function (tdTool_1_1) {
                tdTool_1 = tdTool_1_1;
            },
            function (homePage_1_1) {
                homePage_1 = homePage_1_1;
            },
            function (inGamePage_1_1) {
                inGamePage_1 = inGamePage_1_1;
            },
            function (setingPage_1_1) {
                setingPage_1 = setingPage_1_1;
            },
            function (Main_1_1) {
                Main_1 = Main_1_1;
            }
        ],
        execute: function () {
            MainView = /** @class */ (function (_super) {
                __extends(MainView, _super);
                function MainView() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.sliderSpeed = 0.3;
                    _this.sliderRange = 490;
                    _this.tp = 0;
                    return _this;
                }
                MainView.prototype.onInit = function () {
                    _super.prototype.onInit.call(this);
                    // //打开当前界面不影响其他界面 TipPanel
                    // this.noAffected = true;
                    //屏蔽UI事件
                    //多语言版本
                    this.onShow = this.onShowFun.bind(this);
                    this.onHide = this.onHideFun.bind(this);
                    this.onDispose = this.onDisposeFun.bind(this);
                    this.set_btn_btnEvent = this.setFun.bind(this);
                    this.shop1_btn_btnEvent = this.shopFun.bind(this);
                    this.spin_btn_btnEvent = this.spinFun.bind(this);
                    this.back_btn_btnEvent = this.backFun.bind(this);
                };
                MainView.prototype.onShowFun = function () {
                    // FrameMgr.Add(this.update, this);
                };
                MainView.prototype.onHideFun = function () {
                    // FrameMgr.Remove(this.update, this);
                };
                MainView.prototype.onDisposeFun = function () {
                };
                MainView.prototype.backFun = function () {
                    window.open("showroom://");
                    setTimeout(function () {
                        // 在指定时间后检查是否成功打开了 App，如果没有，则跳转备用 URL
                        if (document.hidden) {
                            console.log("在指定时间后检查是否成功打开了 App，如果没有，则跳转备用 URL");
                        }
                    }, 500);
                };
                MainView.prototype.tween = function (p, dis) {
                    var mth, tp;
                    if (p <= 0.5) {
                        mth = m4m.framework.tweenMethod.QuadEaseIn;
                        tp = p * 2;
                        return m4m.framework.tweenUtil.GetEaseProgress(mth, tp) * dis / 2;
                    }
                    else {
                        mth = m4m.framework.tweenMethod.QuadEaseOut;
                        tp = p * 2 - 1;
                        return m4m.framework.tweenUtil.GetEaseProgress(mth, tp) * dis / 2 + dis / 2;
                    }
                };
                MainView.prototype.update = function (delta) {
                    this.sliderAnimation(delta);
                };
                MainView.prototype.sliderAnimation = function (delta) {
                    //let len =  this.tween(this.tp,this.sliderRange);
                    // if(this.slider.transform.localTranslate.x > this.sliderRange || this.slider.transform.localTranslate.x < 0) {
                    //     this.sliderSpeed *= -1;
                    // }
                };
                MainView.prototype.setFun = function () {
                    var _a;
                    //播放按钮声音
                    AudioMgr_1.AudioMgr.Play("touch.mp3");
                    console.log("设置!");
                    setingPage_1.setingPage.Instance().then(function (ins) {
                        ins.show();
                    });
                    joinTool_1.joinTool.tdcustomEvent(tdTool_1.tdTool.ClickEvent, tdTool_1.tdTool.ClickEvent, (_a = {}, _a[tdTool_1.tdTool.Setting] = 7, _a));
                };
                MainView.prototype.shopFun = function () {
                    //播放按钮声音
                    AudioMgr_1.AudioMgr.Play("touch.mp3");
                    UiManager_1.UiManager.showUi("Skin");
                    inGamePage_1.inGamePage.Instance().then(function (ins) {
                        ins.setShowItem(inGamePage_1.showItem.shop);
                    });
                    homePage_1.homePage.Instance().then(function (ins) {
                        ins.hide();
                    });
                };
                MainView.prototype.spinFun = function () {
                    //播放按钮声音
                    AudioMgr_1.AudioMgr.Play("touch.mp3");
                    UiManager_1.UiManager.showUi("ArchiveSelection");
                    inGamePage_1.inGamePage.Instance().then(function (ins) {
                        ins.setShowItem(inGamePage_1.showItem.shop);
                    });
                    homePage_1.homePage.Instance().then(function (ins) {
                        ins.hide();
                    });
                };
                return MainView;
            }(Main_1.Main));
            exports_2("MainView", MainView);
        }
    };
});
//# sourceMappingURL=Main.js.map